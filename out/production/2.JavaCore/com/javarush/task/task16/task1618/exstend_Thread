class Printer implements Runnable {
    private String name;
    public Printer(String name){
        this.name = name;
    }
    public void run(){
        System.out.println("I’m " + this.name);
    }
}

Создаем две нити, каждая на основе своего объекта типа Printer.
public static void main(String[] args){
    Printer printer1 = new Printer("Коля");
    Thread thread1 = new Thread(printer1);
    thread1.start();

    Printer printer2 = new Printer("Вася");
    Thread thread2 = new Thread(printer2);
    thread2.start();
}

Создаем три нити, на основе одного объекта Printer.
public static void main(String[] args){
    Printer printer = new Printer("Наташа");

    Thread thread1 = new Thread(printer);
    thread1.start();

    Thread thread2 = new Thread(printer);
    thread2.start();

    Thread thread3 = new Thread(printer);
    thread3.start();
}


extend Thread:
1) Вам может понадобиться запустить несколько нитей на основе одного единственного объекта, как это сделано в «примере с Наташей».
2) Если вы унаследовались от класса Thread, вы не можете добавить еще один класс-родитель к своему классу.
3) Если у вашего класса есть класс-родитель, вы не можете добавить второго – Thread.